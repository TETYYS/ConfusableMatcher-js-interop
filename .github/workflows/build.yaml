name: build
on:
    push:
        branches:
            - 'master'
        paths:
            # Source
            - src/**
            # Workflow
            - .github/workflows/build.yaml
            # TypeScript
            - tsconfig*
            # Dependencies
            - package.json
            - yarn.lock
    pull_request:
        paths:
            # Source
            - src/**
            # Workflow
            - .github/workflows/build.yaml
            # TypeScript
            - tsconfig*
            # Dependencies
            - package.json
            - yarn.lock

jobs:
    build:
        runs-on: ${{ matrix.os }}
        container: ${{ matrix.container }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    # Linux (GLIBC)
                    - os: ubuntu-20.04
                      container: centos:7
                      nodejs_version: 12
                      prebuild: true
                    - os: ubuntu-20.04
                      container: centos:7
                      nodejs_version: 14
                    - os: ubuntu-20.04
                      container: centos:7
                      nodejs_version: 16
                    # Linux (MUSL)
                    - os: ubuntu-20.04
                      container: node:12-alpine3.12
                      prebuild: true
                    - os: ubuntu-20.04
                      container: node:14-alpine3.13
                    - os: ubuntu-20.04
                      container: node:16-alpine3.13
                    # MacOS
                    - os: macos-10.15
                      nodejs_version: 12
                      prebuild: true
                    - os: macos-10.15
                      nodejs_version: 14
                    - os: macos-10.15
                      nodejs_version: 16
                    # Windows
                    - os: windows-2019
                      nodejs_version: 12
                      prebuild: true
                    - os: windows-2019
                      nodejs_version: 14
                    - os: windows-2019
                      nodejs_version: 16

        steps:
            # Linux (GLIBC) Dependencies
            - name: Dependencies (Linux/GLIBC)
              if: contains(matrix.container, 'centos')
              run: |
                  curl -sL https://rpm.nodesource.com/setup_${{ matrix.nodejs_version }}.x | bash -
                  yum install -y https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
                  yum install -y gcc-c++ cmake git python3 nodejs
            # Linux (MUSL) Dependencies
            - name: Dependencies (Linux/MUSL)
              if: contains(matrix.container, 'alpine')
              run: |
                  apk add build-base git python3 --update-cache
            # Windows / MacOS Dependencies
            - name: Dependencies (macOS, Windows)
              if: contains(matrix.os, 'macos') || contains(matrix.os, 'windows')
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.nodejs_version }}

            # Debug Info
            - name: Print Versions
              run: |
                  echo "Node version: $(node -v)"
                  echo "NPM version: $(npm -v)"
                  echo "Yarn version: $(yarn -v)"
                  git --version
                  python3 --version
                  cmake --version
                  make --version

            - name: Checkout Latest Commit
              uses: actions/checkout@v2
              with:
                  submodules: recursive
                  fetch-depth: 1

            - name: CHOWN Container Volume
              if: matrix.container
              run: chown root.root .

            - name: Restore Dependencies
              uses: actions/cache@v2
              with:
                  key: ${{ matrix.os }}-${{ matrix.container }}-${{ hashFiles('yarn.lock') }}
                  path: node_modules

            - name: Install Dependencies
              run: yarn install

            - name: Lint
              run: yarn lint

            - name: Format
              run: yarn format

            - name: Spelling
              run: yarn spelling

            - name: Build
              run: yarn build

            - name: Test
              run: yarn test

            - name: Prebuild
              if: github.ref == 'refs/heads/master' && matrix.prebuild
              run: |
                  yarn prebuild --upload "${{ secrets.GITHUB_TOKEN }}"

            - name: Publish
              if: github.ref == 'refs/heads/master'
              uses: pascalgn/npm-publish-action@1.3.7
              with:
                  commit_pattern: "^v(\\d+\\.\\d+\\.\\d+\\S*)$"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
